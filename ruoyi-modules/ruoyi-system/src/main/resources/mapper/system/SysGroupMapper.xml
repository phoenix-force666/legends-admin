<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.SysGroupMapper">
    
    <resultMap type="SysGroup" id="SysGroupResult">
        <result property="groupId"    column="group_id"    />
        <result property="groupName"    column="group_name"    />
        <result property="groupType"    column="group_type"    />
        <result property="createUser"    column="create_user"    />
        <result property="updateUser"    column="update_user"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectSysGroupVo">
        select group_id, group_name, group_type, create_user, update_user, create_time, update_time from sys_group
    </sql>

    <select id="selectSysGroupList" parameterType="SysGroup" resultMap="SysGroupResult">
        <include refid="selectSysGroupVo"/>
        <where>  
            <if test="groupName != null  and groupName != ''"> and group_name like concat('%', #{groupName}, '%')</if>
            <if test="groupType != null "> and group_type = #{groupType}</if>
            <if test="createUser != null "> and create_user = #{createUser}</if>
            <if test="updateUser != null "> and update_user = #{updateUser}</if>
        </where>
    </select>
    
    <select id="selectSysGroupById" parameterType="Integer" resultMap="SysGroupResult">
        <include refid="selectSysGroupVo"/>
        where group_id = #{groupId}
    </select>
        
    <insert id="insertSysGroup" parameterType="SysGroup">
        insert into sys_group
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="groupId != null">group_id,</if>
            <if test="groupName != null">group_name,</if>
            <if test="groupType != null">group_type,</if>
            <if test="createUser != null">create_user,</if>
            <if test="updateUser != null">update_user,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="groupId != null">#{groupId},</if>
            <if test="groupName != null">#{groupName},</if>
            <if test="groupType != null">#{groupType},</if>
            <if test="createUser != null">#{createUser},</if>
            <if test="updateUser != null">#{updateUser},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateSysGroup" parameterType="SysGroup">
        update sys_group
        <trim prefix="SET" suffixOverrides=",">
            <if test="groupName != null">group_name = #{groupName},</if>
            <if test="groupType != null">group_type = #{groupType},</if>
            <if test="createUser != null">create_user = #{createUser},</if>
            <if test="updateUser != null">update_user = #{updateUser},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where group_id = #{groupId}
    </update>

    <delete id="deleteSysGroupById" parameterType="Integer">
        delete from sys_group where group_id = #{groupId}
    </delete>

    <delete id="deleteSysGroupByIds" parameterType="String">
        delete from sys_group where group_id in 
        <foreach item="groupId" collection="array" open="(" separator="," close=")">
            #{groupId}
        </foreach>
    </delete>
    
</mapper>